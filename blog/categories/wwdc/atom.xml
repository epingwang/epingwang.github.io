<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: WWDC | EpingWang's Blog]]></title>
  <link href="http://epingwang.github.io/blog/categories/wwdc/atom.xml" rel="self"/>
  <link href="http://epingwang.github.io/"/>
  <updated>2014-06-10T17:21:50+08:00</updated>
  <id>http://epingwang.github.io/</id>
  <author>
    <name><![CDATA[Eping Wang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Session 202 What's New in Cocoa Touch 笔记]]></title>
    <link href="http://epingwang.github.io/blog/2014/06/10/session-202-whats-new-in-cocoa-touch-bi-ji/"/>
    <updated>2014-06-10T15:24:54+08:00</updated>
    <id>http://epingwang.github.io/blog/2014/06/10/session-202-whats-new-in-cocoa-touch-bi-ji</id>
    <content type="html"><![CDATA[<h1>What&rsquo;s New in Cocoa Touch 笔记</h1>

<p>Session 202</p>

<p>Luke Hiesterman</p>

<p>Core idea iOS8 &ndash;> Adaptivity</p>

<h2>Adaptive Layout</h2>

<p>Orientations, sizes, and margins</p>

<h3>Adaptive Interface Orientation</h3>

<p>Layout 不再关心设备的方向以及设备的类型，而只关心屏幕画布的尺寸</p>

<p>范例: UITraitCollection
成员属性:</p>

<ul>
<li>horizontalSizeClass</li>
<li>displayScale</li>
<li>userInterfaceIdiom</li>
<li>verticalSizeClass</li>
</ul>


<p>UIViewController Conforms to <code>UITraitEnviroment</code>
当屏幕尺寸变化（设备方向改变）时，会调用</p>

<p>```
&ndash;(void)traitCollectionDidChange:(UITraitCollection *)previousTraitCollection
{</p>

<pre><code>// 使用Layout设置CollectionView
UITraitCollection *currentTraits = self.traitCollection;
UICollectionViewLayout *newLayout = currentTraits.horizontalSizeClass == UIUserInterfaceSizeClassCompact ? self.squaresLayout : self.rectanglesLayout;
[self.collectionView setCollectionViewLayout:newLayout animated:YES];
</code></pre>

<p>}</p>

<p>```</p>

<h3>Adaptive Margins</h3>

<p>UIViewController 的属性:</p>

<ul>
<li>bottomLayoutGuide</li>
<li>topLayoutGuide</li>
<li>leftLayoutGuide</li>
<li>rightLayoutGuide</li>
</ul>


<p>可以确定四个边界（不用计算Navigation、ToolBar的高度）</p>

<p>See More: <a href="">Building Adaptive Apps with UIKit</a></p>

<h3>Adaptive View Controllers</h3>

<h4>Rotation Deprecations</h4>

<p>```
&ndash;(void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration;</p>

<p>&ndash;(void)willAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration;</p>

<p>&ndash;(void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation;</p>

<p>&ndash;(BOOL)shouldAutomaticallyForwardRotationMethods;</p>

<p>&ndash;(UIInterfaceOrientation)interfaceOrientation;</p>

<p>&ndash;(UIView *)rotatingFooterView;</p>

<p>&ndash;(UIView *)rotatingHeaderView;
```</p>

<p>取而代之的新方法:</p>

<p><code>
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id &lt;UIViewControllerTransitionCoordinator&gt;)coordinator NS_AVAILABLE_IOS(8_0);
</code></p>

<h3>Adaptive View Controller Hierarchies</h3>

<h4>UISplitViewController</h4>

<p>Primary &ndash; Secondary (TableView &ndash; Detail) 视图</p>

<p>现在可以用<code>Split View Controller - Detail View Controller</code></p>

<ul>
<li>全设备支持</li>
<li>处理 <code>primary-secondary</code> 样式的视图交互</li>
<li>增强的可定制性</li>
</ul>


<p>See more: <a href="">View Controller Advancements in iOS8</a></p>

<h3>Adaptive Presentations</h3>

<p>适应不同设备的 <code>弹出视图(Popovers)</code>、<code>SearchBar</code>、<code>警告(Alerts)</code></p>

<h4>Popovers</h4>

<p>iPad上不再需要<code>UIPopOverController</code>，<code>Popover</code>以后做为UIViewController的Style使用
在iPhone上显示为PresentViewController样式</p>

<h4>Search Results</h4>

<p><code>UISearchDisplayController</code> replaced by</p>

<p><code>UISearchController</code> &ndash;> <code>UIViewController</code> subclass</p>

<ul>
<li><p>可以使用UIViewController的一切特性</p></li>
<li><p>可以定制UISearchController的UI</p></li>
</ul>


<h4>Alerts</h4>

<p><code>UIAlertController</code> replaces <code>UIAlertView</code> and <code>UIActionSheet</code></p>

<p>UIAlertController 也是 UIViewController 的 subclass</p>

<p>See More: <a href="">A Look Inside Presentation Controllers</a></p>

<h2>Testing with the iOS Simulator</h2>

<p>Simulator 可以直接调整 Size</p>

<ul>
<li>Resizeable iPhone</li>
<li>Resizeable iPad</li>
</ul>


<h2>Visual Effects</h2>

<p>UIVisualEffectView</p>

<p>可以接收<code>UIEffect</code>，来影响View及Subview上的Layer</p>

<ul>
<li>UIBlurEffect</li>
<li>UIVibrancyEffect</li>
</ul>


<h2>Image Assets</h2>

<p>直接返回正确的图片
```
+ (UIImage <em>)imageNamed:(NSString </em>)name</p>

<pre><code>           inBundle:(NSBundle *)bundle
</code></pre>

<p>compatibleWithTraitCollection:(UITraitCollection *)traitCollection
```</p>

<h2>Condensing Bars</h2>

<p>当用户滚动Scroll时，Navigation Bar 变小</p>

<p>See More: <a href="">Creating Custom iOS User Interfaces</a></p>

<h2>Self-sizing Table Cells</h2>

<p><strong> cell的 <code>height</code> 将无需在 <code>heightForRowAtIndexPath:</code> 中实现 </strong></p>

<p>cell 可以自己计算它的尺寸</p>

<p>```
&ndash; (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier
{</p>

<pre><code>self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
if (self) {
    [self.contentView addConstraints:[NSLayoutConstraint
                                      constraintsWithVisualFormat:@"V:|-myTextView-|"
                                      options:0
                                      metrics:nil
                                        views:NSDictionaryOfVariableBindings(_myTextView)]];

    [self.contentView addConstraints:[NSLayoutConstraint
                                      constraintsWithVisualFormat:@"H:|-myTextView-|"
                                      options:0
                                      metrics:nil
                                        views:NSDictionaryOfVariableBindings(_myTextView)]];
}
return self;
</code></pre>

<p>}
```</p>

<p>See More: <a href="">What&rsquo;s new in Table and Collection Views</a></p>

<h2>App Extensions</h2>

<p>可以写系统增强插件，例如在<code>Photo</code>中调用我们写的<code>Filter软件</code>或者<code>Share Extention</code></p>

<ul>
<li>Photo</li>
<li>Sharing</li>
<li>Notification Center Widgets</li>
<li>Action without UI</li>
<li>Document providers (向其他应用提供内容的Extension)</li>
<li>Custom keyboards</li>
</ul>


<p>See More: <a href="">Creating Extensions for iOS and OS X</a></p>

<h2>Notification Updates</h2>

<ul>
<li>不需要Show UI的Notification，不再需要用户的Permission</li>
<li>Notification可以进行用户交互</li>
<li>可以进行基于地理位置的Notification</li>
<li>payload size (256 bytes &ndash;> 1k)</li>
</ul>


<p>See More: <a href="">What&rsquo;s New in iOS Notifications</a></p>

<h2>Document Picker</h2>

<p>UIDocumentPickerViewController</p>

<p>System UI for selection documents</p>

<ul>
<li>Local documents</li>
<li>iCloud documents</li>
<li>Third-party document providers</li>
</ul>


<p>See more: <a href="">Building a Document-based App</a></p>

<h2>SDK Modernization</h2>

<ul>
<li>NS_DESIGNATED_INITIALIZER</li>
<li>id &ndash;> instancetype</li>
<li>Additional @properties</li>
</ul>


<h2>Handoff</h2>

<ul>
<li>通过Handoff用户可以在多设备之间共享操作</li>
<li>UIKit 和 AppKit 均支持 Handoff</li>
</ul>


<p>See More: <a href="">Adopting Handoff on iOS and OS X</a></p>

<h2>More Goodies in iOS</h2>

<h2>Photos</h2>

<ul>
<li>Photo Library 的读写权限</li>
<li>Custom CoreImage Filters</li>
</ul>


<p>See More: <a href="">Introducing the Photos Frameword</a></p>

<h2>CloudKit</h2>

<ul>
<li>更多的API，控制iCloud上的数据</li>
<li>创建一个 C/S App，无需搭设服务器</li>
</ul>


<p>See More: <a href="">Introducing CloudKit</a></p>

<h2>HealthKit</h2>

<p>See More: <a href="">Introducing HealthKit</a></p>

<h2>HomeKit</h2>

<p>See More: <a href="">Introducing HomeKit</a></p>

<h2>Local Authentication</h2>

<p>开放的指纹识别系统</p>

<ul>
<li>TouchID</li>
</ul>


<p>See More: <a href="">Keychain and Authentication with Touch ID</a></p>

<h2>SceneKit</h2>

<p>跨设备的3D渲染——For iOS</p>

<h2>Core Location</h2>

<ul>
<li>可以获得 Indoor Location，获得精确的楼层信息</li>
<li>更省电</li>
<li>当使用时获得用户的授权</li>
</ul>

]]></content>
  </entry>
  
</feed>
